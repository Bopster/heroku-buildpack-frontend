#!/bin/sh
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Constants

DEFAULT_CACHE="node_modules bower_components"

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

### Set methods and vars used in script

indent() {
    sed -u 's/^/       /'
}

export_env_dir() {
    whitelist_regex=${2:-''}
    blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
    if [ -d "$ENV_DIR" ]; then
        for e in $(ls $ENV_DIR); do
            echo "$e" | indent | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
            export "$e=$(cat $ENV_DIR/$e)"
            :
        done
    fi
}

PREFIX="----->"

## Start compiling

# Check and run gulp
# get the env vars
if [ -d "$ENV_DIR" ]; then
  echo "$PREFIX Exporting config vars to environment"
  export_env_dir $ENV_DIR
fi

# Install gulp locally
echo "$PREFIX Installing Gulp"
npm install gulp

if [ -z "$var" ]; then
    echo "$PREFIX Running gulp without any command"
    $BUILD_DIR/node_modules/.bin/gulp
else
    echo "$PREFIX Running gulp with command $GULP_COMMAND"
    $BUILD_DIR/node_modules/.bin/gulp $GULP_COMMAND
fi

echo "$PREFIX Done GulpBuild"