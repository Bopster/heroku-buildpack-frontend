#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Set methods and vars used in script

DEFAULT_CACHE="node_modules bower_components"

## Load deps

source $BP_DIR/lib/cache.sh
source $BP_DIR/lib/output.sh

## Start compiling

# Restore node cache dir
header "Restoring cache"
restore_cache_directories "$BUILD_DIR" "$CACHE_DIR" "$DEFAULT_CACHE" | output

# Get into build dir
cd $BUILD_DIR

# Install bower
header "Setup environment for bower"

if [ ! -f "$BUILD_DIR/node_modules/.bin/bower" ]; then
    info "Install bower"
    npm install bower >/dev/null
fi

info "Run 'bower install'"
$BUILD_DIR/node_modules/.bin/bower install --quiet | output

# Install gulp locally
header "Running gulp"

$BUILD_DIR/node_modules/.bin/gulp | output

header "Checking if ./dist directory is present"

if [ ! -d "$BUILD_DIR/dist" ]; then
    info "No ./dist directory found. This should be present by now, exiting."
    exit 1
else
    info "./dist Directory found, build done."
fi

header "Saving cache"
save_cache_directories "$BUILD_DIR" "$CACHE_DIR" "$DEFAULT_CACHE" | output

# Do cleanup
header "Start cleanup to keep slug size small"

if [ -d "$BUILD_DIR/bower_components" ]; then
    info "removing bower_components directory."
    rm -r $BUILD_DIR/bower_components
fi

if [ -d "$BUILD_DIR/src" ]; then
    info "removing src directory."
    rm -r $BUILD_DIR/src
fi

if [ -d "$BUILD_DIR/e2e" ]; then
    info "removing e2e directory."
    rm -r $BUILD_DIR/e2e
fi